# -*-makefile-*-
#
# Makefile targets for tokenization ...
#
#

OPUSTOKENIZER ?= ${OPUSTOOLS}/opus-polyglot-tokenize.py


ifndef LANGUAGE
  LANGUAGE=$(firstword ${LANGUAGES})
endif

RAWDIR := ${CORPUSRAW}/${LANGUAGE}
ifndef XMLFILES
  XMLFILES := $(patsubst ${CORPUSRAW}/%,${CORPUSXML}/%,$(shell find ${RAWDIR} -name '*.${XMLEXT}'))
endif


## NEW: use flags to indicate finished processes
## --> allow parallelization

TOKENIZE_DONE = ${patsubst %,log/.%.tokenize.done,${LANGUAGES}}
tokenize annotate: ${TOKENIZE_DONE}

${TOKENIZE_DONE}:
	mkdir -p ${dir $@}
	${MAKE} LANGUAGE=${patsubst log/.%.tokenize.done,%,$@} tokenize_files
	mkdir -p ${dir $@}
	touch $@


tokenize_files annotate_files: ${XMLFILES}
	mkdir -p log
	touch log/.${LANGUAGE}.tokenize.done


ifeq (${XMLEXT},'xml.gz')
  CATCMD = zcat
  ZIPCMD = | gzip -c
else
  CATCMD = cat
  ZIPCMD = 
endif

${CORPUSXML}/${LANGUAGE}/%: ${CORPUSRAW}/${LANGUAGE}/%
	mkdir -p $(shell dirname $@)
	${CATCMD} $< | ${OPUSTOKENIZER} -l $(LANGUAGE) ${ZIPCMD} > $@


clean-xml:
	for l in ${LANGUAGES}; do \
	    if [ -d "xml/$$l" ]; then \
		rm -fr xml/$$l; \
	    fi \
	done
