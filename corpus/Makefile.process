# -*-makefile-*-
#
# Makefile targets for processing corpus data
#
# - create essential makefiles
# - pre-process data
# - sentence alignment
# - word alignment
#

ifndef LANGUAGE
	LANGUAGE=$(firstword ${LANGUAGES})
endif

RAW_FILE_FORMAT ?= TXTEXT

SRCDIR = src/${LANGUAGE}
ifneq ("$(wildcard $(SRCDIR))","")
ifndef RAWFILES
  RAWFILES := $(patsubst src/%.${RAW_FILE_FORMAT},raw/%.${XMLEXT}, \
		$(shell find ${SRCDIR} -name '*.${RAW_FILE_FORMAT}'))
endif
endif

## make the corpus (all steps)
.PHONY: corpus
corpus:
	${MAKE} preprocess
	${MAKE} annotate
	${MAKE} align
	${MAKE} udparse
	${MAKE} wordalign
	${MAKE} cwb-index


.PHONY: corpus-basic
corpus-basic:
	${MAKE} preprocess
	${MAKE} annotate
	${MAKE} align

.PHONY: corpus-extra
corpus-extra:
	${MAKE} udparse
	${MAKE} wordalign
	${MAKE} cwb-index

## publish the corpus (create website and download packages)
.PHONY: publish
publish: packages webpage


## prepare makefiles
.PHONY: prepare
prepare: xml/Makefile wordalign/Makefile

## pre-process data (all languages)
.PHONY: preprocess
PREPROCESS_DONE = ${patsubst %,log/.%.preprocess.done,${LANGUAGES}}
preprocess: ${PREPROCESS_DONE}

${PREPROCESS_DONE}:
	${MAKE} LANGUAGE=${patsubst log/.%.preprocess.done,%,$@} preprocess_files
	mkdir -p ${dir $@}
	touch $@

## OLD: for loop cannot be parallelized
# preprocess:
#	for l in ${LANGUAGES}; do \
#		${MAKE} LANGUAGE=$$l preprocess_files; \
#	done


## sentence alignment (all language pairs)
.PHONY: align sentalign
align sentalign: xml/Makefile
	${MAKE} -C xml all

## word alignment (all language pairs)
.PHONY: wordalign wordalign-submit
wordalign: wordalign/Makefile
	${MAKE} -C wordalign all

wordalign-submit: wordalign/Makefile
	${MAKE} -C wordalign submit-all


## insert word alignments into mySQL database
.PHONY: lexicon
lexicon: lexicon/Makefile
	${MAKE} -C lexicon all


xml/Makefile:
	@mkdir -p ${dir $@}
	@echo "# -*-makefile-*-" > $@
	@echo ""  >> $@
	@echo "include ../Makefile.def" >> $@
	@echo "include ../../Makefile.def" >> $@
	@echo "include ../../Makefile.sentalign" >> $@
	@echo ""  >> $@
	@echo "all: sentalign-all" >> $@
	@echo "jobs: sentalign-jobs" >> $@


wordalign/Makefile:
	@mkdir -p ${dir $@}
	@echo "# -*-makefile-*-" > $@
	@echo ""  >> $@
	@echo "include ../Makefile.def" >> $@
	@echo "include ../../Makefile.def" >> $@
	@echo "include ../../Makefile.wordalign" >> $@
	@echo ""  >> $@
	@echo "all: wordalign-all" >> $@


lexicon/Makefile:
	@mkdir -p ${dir $@}
	@echo "# -*-makefile-*-" > $@
	@echo ""  >> $@
	@echo "include ../Makefile.def" >> $@
	@echo "include ../../Makefile.def" >> $@
	@echo "include ../../Makefile.lexicon" >> $@
	@echo ""  >> $@
	@echo "all: lexicon-all" >> $@


.PHONY: preprocess_files
preprocess_files: ${RAWFILES}

.PHONY: preprocess_file_test
preprocess_file_test: $(firstword ${RAWFILES})


## different kind of pre-processing depending on the raw input format
##  - xml input --> just add sentence boundaries
##  - txt input --> entire pre-processing pipeline

ifeq (${RAW_FILE_FORMAT},${XMLEXT})


raw/${LANGUAGE}/%.${XMLEXT}: src/${LANGUAGE}/%.${XMLEXT}
	mkdir -p $(shell dirname $@)
ifeq (${XMLEXT},xml.gz)
	${GZCAT} $< | ${SENT} | ${GZIP} -c > $@
else
	${SENT} < $< > $@
endif


else


raw/${LANGUAGE}/%.${XMLEXT}: src/${LANGUAGE}/%.${TXTEXT}
	mkdir -p $(shell dirname $@)
ifeq (${XMLEXT},xml.gz)
	${GZCAT} $< | ${PRE} | ${GZIP} -c > $@
else
	${PRE} < $< > $@
endif

endif



.PHONY: clean-raw
clean-raw:
	for l in ${LANGUAGES}; do \
	    if [ -d "raw/$$l" ]; then \
		rm -fr raw/$$l; \
	    fi \
	done


