# -*-makefile-*-
#
# Makfile targets for sentence alignment
# should be included by CORPUS/xml/Makfile!
#

#--------------------------------------------------------------------
# sentence alignment
#   sent ... Gale&Church (original C-code via Uplug)
#   hun .... hunalign (called from Uplug)
#--------------------------------------------------------------------

# hunalign with disctionaries, tokenized & lowercased text, timeout = 5 minutes
ALIGNTIMEOUT = 300
ALIGNMETHOD  = hun -tok -l -time ${ALIGNTIMEOUT}
SENTALIGN    = ${UPLUG} align/$(ALIGNMETHOD)
# SENTALIGN = ${UPLUG} align/sent


#
# phony language targets ...
#
# ALLSRC - all possible source languages
# ALLTRG - all possible target languages (same as ALLSRC)
#
# LANGUAGES comes from ../../Makefile.def, should be sorted alphabetically

ALLSRC = $(addsuffix .src,$(LANGUAGES))
ALLTRG = $(addsuffix .trg,$(LANGUAGES))

# make all:
#
# - for all possible source languages
#   - for all possible target languages
#     - align all source files to appropriate target language files
#       (only if the target language is not yet aligned to the source language)
# sentence alignments will be in one file per language pair (SRCTRG.ces)
# (but also in indivudal files for each language pair and file pair)
#
# (translate.txt is created by hunalign - don't know why ...)

.PHONY: align-all all-align
align-all all-align: ${ALLSRC}
	rm -f translate.txt
	rm -fr data

.PHONY: clean-align
clean-align:
	for s in ${LANGUAGES}; do \
	  for t in ${LANGUAGES}; do \
		rm -fr $$s-$$t; \
	    	rm -f $$s-$$t.xml*; \
	  done \
	done


# SRC - current source language (take first if not set)
# TRG - current target language (take last if not set)

ifndef SRC
  SRC=$(firstword ${LANGUAGES})
endif
ifndef TRG
  TRG=$(lastword ${LANGUAGES})
endif

ifndef SRC
  SRC=en
endif
ifndef TRG
  TRG=sv
endif


## align all files for the current language pair
## (only for different languages and sorted by lang ID)

.PHONY: align
align:
ifneq (${SRC},${lastword ${sort ${SRC} ${TRG}}})
	${MAKE} ${SRC}-${TRG}.xml.gz
endif


## call 'make $ALLTRG' for all languages once as source language

$(ALLSRC): %.src: %
	${MAKE} SRC=$< ${ALLTRG}


## for all languages as target language: align to current source language

$(ALLTRG): %.trg: %
	${MAKE} SRC=$(SRC) TRG=$< align


# all alignment file targets for the current language pair:
#
# files with the same name are parallel documents!
# --> grep those and make them alignment targets!


#ALGFILES = $(addprefix $(SRC)-$(TRG)/,\
#	 	$(shell ls ${SRC} ${TRG} | grep '\.${XMLEXT}$$' |\
#			sort | uniq -c | grep '^ *2 *' | sed 's/^ *2 *//'))

ifneq (${SRC},)
ifneq (${TRG},)
ifndef ALGFILES
  ALGFILES := $(addprefix $(SRC)-$(TRG)/,\
	   $(shell find ${SRC}/ ${TRG}/ -name '*.${XMLEXT}' -printf "%P\n" |\
		   sort | uniq -c | grep '^ *2 *' | sed 's/^ *2 *//'))
endif
endif
endif


## this is the final target (all sentence alignments in one file)
## new: merge with existing file instead of overwriting it
## ---> requires opus-merge-align from opus-tools

${SRC}-${TRG}.xml.gz: ${ALGFILES}
	mkdir -p ${SRC}-${TRG}
	-( find ${SRC}-${TRG}/ -type f -name '*.xml.gz' |\
		sort |\
		xargs zgrep --no-filename 'link' >> $@.links )
	if [ -s $@.links ]; then \
	  echo '<?xml version="1.0" encoding="utf-8"?>' >$@.tmp; \
	  echo '<!DOCTYPE cesAlign PUBLIC "-//CES//DTD XML cesAlign//EN" "">' \
		  >>$@.tmp; \
	  echo '<cesAlign version="1.0">' >> $@.tmp; \
	  cat $@.links >> $@.tmp; \
	  echo '</cesAlign>' >> $@.tmp; \
	  gzip $@.tmp; \
	  if [ -e $@ ]; then \
	    opus-merge-align $@ $@.tmp.gz | gzip -c > $@.tmp2.gz; \
	    mv -f $@.tmp2.gz $@; \
	    rm -f $@.tmp.gz; \
	  else \
	    mv -f $@.tmp.gz $@; \
	  fi; \
	fi
	rm -f $@.links
	rm -fr ${SRC}-${TRG}


# individual sentence alignment files (for each document pair)

## define variables for command line options
## to make it a bit more flexible to use other tools

ifeq (${SENTALIGN},srtalign)
  ALGSIDOPT=-S
  ALGTIDOPT=-T
  ALGSRCOPT=
  ALGTRGOPT=
  ALGOUTOPT=>
  ALGOPT=
  # ALGOPT=-b -i 5 -m 10
else
  ALGSIDOPT=-s
  ALGTIDOPT=-t
  ALGSRCOPT=-src
  ALGTRGOPT=-trg
  ALGOUTOPT=-out
  ALGOPT=
endif

${ALGFILES}: ${SRC}-${TRG}/%: ${SRC}/% ${TRG}/%
	mkdir -p $(shell dirname $@)
	${SENTALIGN} ${ALGOPT} \
		${ALGSIDOPT} ${SRC} \
		${ALGTIDOPT} ${TRG} \
		${ALGSRCOPT} $< \
		${ALGTRGOPT} $(patsubst ${SRC}/%,${TRG}/%,$<) \
		${ALGOUTOPT} $@








# make only the alignment files for each language pair

.PHONY: create-align-files
create-align-files:
	for s in ${LANGUAGES}; do \
	  for t in ${LANGUAGES}; do \
		make SRC=$$s TRG=$$t create-align-file; \
	  done \
	done


## new: merge with existing alignment file instead of overwriting it!
## ---> requires opus-merge-align from opus-tools

.PHONY: create-align-file
create-align-file:
	if [ "${SRC}" != "${TRG}" ]; then \
	  if [ -d "${SRC}-${TRG}" ]; then \
	find ${SRC}-${TRG}/ -type f -name '*.xml.gz' |\
		sort |\
		xargs zgrep --no-filename 'link' |\
	sed 's/\.xml"/\.xml.gz"/g' >> ${SRC}-${TRG}.links; \
	if [ -s ${SRC}-${TRG}.links ]; then \
	  echo '<?xml version="1.0" encoding="utf-8"?>' >${SRC}-${TRG}.tmp; \
	  echo '<!DOCTYPE cesAlign PUBLIC "-//CES//DTD XML cesAlign//EN" "">' \
		  >>${SRC}-${TRG}.tmp; \
	  echo '<cesAlign version="1.0">' >> ${SRC}-${TRG}.tmp; \
	  cat ${SRC}-${TRG}.links >> ${SRC}-${TRG}.tmp; \
	  echo '</cesAlign>' >> ${SRC}-${TRG}.tmp; \
	  gzip -f ${SRC}-${TRG}.tmp; \
	  if [ -e ${SRC}-${TRG}.xml.gz ]; then \
	    echo "merge ${SRC}-${TRG}.xml.gz ${SRC}-${TRG}.tmp.gz"; \
	    opus-merge-align ${SRC}-${TRG}.xml.gz ${SRC}-${TRG}.tmp.gz |\
	    gzip -c > ${SRC}-${TRG}.tmp2.gz; \
	    mv -f ${SRC}-${TRG}.tmp2.gz ${SRC}-${TRG}.xml.gz; \
	    rm -f ${SRC}-${TRG}.tmp.gz; \
	  else \
	    mv -f ${SRC}-${TRG}.tmp.gz ${SRC}-${TRG}.xml.gz; \
	  fi; \
	fi; \
	rm -f ${SRC}-${TRG}.links; \
	  fi; \
	  rm -fr ${SRC}-${TRG}; \
	fi


fix-align-files:
	for s in ${LANGUAGES}; do \
	  for t in ${LANGUAGES}; do \
	    if [ -e $$s-$$t.xml.gz ]; then \
		echo "fix $$s-$$t.xml.gz"; \
		opus-merge-align $$s-$$t.xml.gz | gzip -c > $$s-$$t.tmp.gz; \
		mv -f $$s-$$t.tmp.gz $$s-$$t.xml.gz; \
	    fi \
	  done \
	done
